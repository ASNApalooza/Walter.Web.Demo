Using System
Using System.Web
Using System.Collections
Using System.Collections.Specialized
Using ASNA.DataGate.Client
Using System.Configuration
Using ClosedXMl.Excel
Using System.IO 


BegClass ExcelOutput Access(*Public) Implements (IHttpHandler)

    BegSr ProcessRequest Access(*Public) Implements(IHttpHandler.ProcessRequest)
        DclSrParm Context Type(HttpContext)

        DclFld Query         Type(ASNA.Helpers.DataServices.QueryDriver) 
        DclFld db            Type(AdgConnection)
        DclFld Json          Type(*String)
        DclFld DBName        Type(*String) 
        DclFld ActiveDBName  Type(*String) 
        DclFld ExcelAdapter  Type(ASNA.Helpers.DataServices.ToExcelAdapter)
        DclFld WorkBook      Type(XLWorkBook) 
        DclFLd MemStream     Type(System.IO.MemoryStream) New()
        DclFld Url           Type(*String)

        DclFld logger Type(log4Net.ILog) 
        logger = log4Net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType)
        
        Try 
            //Throw *New System.ArgumentException("error thrown") 

            ActiveDBName =  ConfigurationManager.AppSettings["ActiveDBName"]
            DBName =  ConfigurationManager.AppSettings[ActiveDBName]
            db = *New AdgConnection(DBName)
            db.Open()
            Query = *New ASNA.Helpers.DataServices.QueryDriver(db)
            GetArgs(Context,Query) 

            ExcelAdapter = *New ASNA.Helpers.DataServices.ToExcelAdapter(Query.Args) 
            Query.OverrideAdapter(ExcelAdapter)

            context.Response.ContentType = "application/json"
            context.Response.AddHeader("content-disposition", "attachment;filename=HelloWorld.xlsx")

            //http://localhost:8080/services/ExcelOutput.ashx?library=examples&file=cmastnewl2&fieldsList=CMCUSTNO:value,CMNAME:label&rows=12&qryfld1=CMNAME&qryval1=Smi&query=CMNAME%3E%3D%27%7BCMNAME%7D%27
            
            WorkBook = Query.Exec() *As XLWorkBook
            If (Query.Args.Error.ErrorException <> *Nothing) 
                logger.Info("QueryFile exception",Query.Args.Error.ErrorException) 
                Throw Query.Args.Error.ErrorException
            EndIf 
            WorkBook.SaveAs(MemStream)
            MemStream.WriteTo(context.Response.OutputStream) 
            //context.Response.End() 
            MemStream.Dispose()

            db.Close() 
        Catch ex Type(System.Exception)             
            Url = "../" + Context.Request.UrlReferrer.AbsolutePath + "?ERROR=90"
            Context.Response.Redirect( Url, *True) 
        EndTry 
    EndSr

    BegSr GetArgs 
        DclSrParm context Type(HttpContext)
        DclSrParm Query   Type(ASNA.Helpers.DataServices.QueryDriver)

        DclArray QueryTypes Type(*String) Rank(1) 
        DclFld   KeyValue   Type(*String)
        DclFld   qf         Type(ASNA.Helpers.DataServices.QueryFieldInfo) 

        QueryTypes = *New *String[] {"paged","simple"} 

        Query.Args.Inputs.Library    = Context.Request.Form["library"]
        Query.Args.Inputs.File       = Context.Request.Form["file"]
        Query.Args.Inputs.FieldsList = Context.Request.Form["fieldsList"]
        Query.Args.Inputs.Rows       = Convert.ToInt32(Context.Request.Form["rows"])
        Query.Args.Inputs.QueryType  = Array.IndexOf(QueryTypes, Context.Request.Form["queryType"])    

        ForEach key Type(*String) Collection(Context.Request.Form.AllKeys) 
            KeyValue = Context.Request.Form[key]                
            If (KeyValue.StartsWith("@")) 
                qf = ASNA.Helpers.DataServices.Parse.ParseQueryField(KeyValue) 
                Query.Args.Inputs.QueryFields.Add(*New ASNA.Helpers.DataServices.QueryField(qf.Name,qf.Value)) 
            EndIf 
        EndFor 
    EndSr

    BegProp IsReusable Type(*Boolean) Access(*Public) Implements(IHttpHandler.IsReusable)
        BegGet
            LeaveSr *False
        EndGet
    EndProp

EndClass